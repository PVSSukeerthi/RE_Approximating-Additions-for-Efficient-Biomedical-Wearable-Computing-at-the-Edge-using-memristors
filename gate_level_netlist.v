/* Generated by Yosys 0.9 (git sha1 1979e0b) */

(* top =  1  *)
(* src = "add16se_2E1.v:18" *)
module add16se_2E1(A, B, O);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  (* src = "add16se_2E1.v:24" *)
  wire _046_;
  (* src = "add16se_2E1.v:24" *)
  wire _047_;
  (* src = "add16se_2E1.v:24" *)
  wire _048_;
  (* src = "add16se_2E1.v:24" *)
  wire _049_;
  (* src = "add16se_2E1.v:24" *)
  wire _050_;
  (* src = "add16se_2E1.v:24" *)
  wire _051_;
  (* src = "add16se_2E1.v:24" *)
  wire _052_;
  (* src = "add16se_2E1.v:24" *)
  wire _053_;
  (* src = "add16se_2E1.v:24" *)
  wire _054_;
  (* src = "add16se_2E1.v:24" *)
  wire _055_;
  (* src = "add16se_2E1.v:25" *)
  wire _056_;
  (* src = "add16se_2E1.v:25" *)
  wire _057_;
  (* src = "add16se_2E1.v:25" *)
  wire _058_;
  (* src = "add16se_2E1.v:25" *)
  wire _059_;
  (* src = "add16se_2E1.v:25" *)
  wire _060_;
  (* src = "add16se_2E1.v:25" *)
  wire _061_;
  (* src = "add16se_2E1.v:25" *)
  wire _062_;
  (* src = "add16se_2E1.v:25" *)
  wire _063_;
  (* src = "add16se_2E1.v:25" *)
  wire _064_;
  (* src = "add16se_2E1.v:25" *)
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  (* src = "add16se_2E1.v:30" *)
  wire _104_;
  (* src = "add16se_2E1.v:31" *)
  wire _105_;
  (* src = "add16se_2E1.v:31" *)
  wire _106_;
  (* src = "add16se_2E1.v:31" *)
  wire _107_;
  (* src = "add16se_2E1.v:31" *)
  wire _108_;
  (* src = "add16se_2E1.v:31" *)
  wire _109_;
  (* src = "add16se_2E1.v:31" *)
  wire _110_;
  (* src = "add16se_2E1.v:31" *)
  wire _111_;
  (* src = "add16se_2E1.v:31" *)
  wire _112_;
  (* src = "add16se_2E1.v:31" *)
  wire _113_;
  (* src = "add16se_2E1.v:24" *)
  input [15:0] A;
  (* src = "add16se_2E1.v:25" *)
  input [15:0] B;
  (* src = "add16se_2E1.v:26" *)
  output [16:0] O;
  (* src = "add16se_2E1.v:30" *)
  wire sig_134;
  (* src = "add16se_2E1.v:31" *)
  wire sig_135;
  (* src = "add16se_2E1.v:31" *)
  wire sig_136;
  (* src = "add16se_2E1.v:31" *)
  wire sig_137;
  (* src = "add16se_2E1.v:31" *)
  wire sig_138;
  (* src = "add16se_2E1.v:31" *)
  wire sig_139;
  (* src = "add16se_2E1.v:31" *)
  wire sig_140;
  (* src = "add16se_2E1.v:31" *)
  wire sig_141;
  (* src = "add16se_2E1.v:31" *)
  wire sig_142;
  (* src = "add16se_2E1.v:31" *)
  wire sig_143;
  OR2 _114_ (
    .A(_062_),
    .B(_052_),
    .Y(_066_)
  );
  AND2 _115_ (
    .A(_063_),
    .B(_053_),
    .Y(_067_)
  );
  XOR2 _116_ (
    .A(_063_),
    .B(_053_),
    .Y(_068_)
  );
  AND2 _117_ (
    .A(_066_),
    .B(_068_),
    .Y(_069_)
  );
  XOR2 _118_ (
    .A(_066_),
    .B(_068_),
    .Y(_104_)
  );
  OR2 _119_ (
    .A(_067_),
    .B(_069_),
    .Y(_070_)
  );
  AND2 _120_ (
    .A(_064_),
    .B(_054_),
    .Y(_071_)
  );
  XOR2 _121_ (
    .A(_064_),
    .B(_054_),
    .Y(_072_)
  );
  AND2 _122_ (
    .A(_070_),
    .B(_072_),
    .Y(_073_)
  );
  XOR2 _123_ (
    .A(_070_),
    .B(_072_),
    .Y(_105_)
  );
  OR2 _124_ (
    .A(_071_),
    .B(_073_),
    .Y(_074_)
  );
  AND2 _125_ (
    .A(_065_),
    .B(_055_),
    .Y(_075_)
  );
  XOR2 _126_ (
    .A(_065_),
    .B(_055_),
    .Y(_076_)
  );
  AND2 _127_ (
    .A(_074_),
    .B(_076_),
    .Y(_077_)
  );
  XOR2 _128_ (
    .A(_074_),
    .B(_076_),
    .Y(_106_)
  );
  OR2 _129_ (
    .A(_075_),
    .B(_077_),
    .Y(_078_)
  );
  AND2 _130_ (
    .A(_056_),
    .B(_046_),
    .Y(_079_)
  );
  XOR2 _131_ (
    .A(_056_),
    .B(_046_),
    .Y(_080_)
  );
  AND2 _132_ (
    .A(_078_),
    .B(_080_),
    .Y(_081_)
  );
  XOR2 _133_ (
    .A(_078_),
    .B(_080_),
    .Y(_107_)
  );
  OR2 _134_ (
    .A(_079_),
    .B(_081_),
    .Y(_082_)
  );
  AND2 _135_ (
    .A(_057_),
    .B(_047_),
    .Y(_083_)
  );
  XOR2 _136_ (
    .A(_057_),
    .B(_047_),
    .Y(_084_)
  );
  AND2 _137_ (
    .A(_082_),
    .B(_084_),
    .Y(_085_)
  );
  XOR2 _138_ (
    .A(_082_),
    .B(_084_),
    .Y(_108_)
  );
  OR2 _139_ (
    .A(_083_),
    .B(_085_),
    .Y(_086_)
  );
  AND2 _140_ (
    .A(_058_),
    .B(_048_),
    .Y(_087_)
  );
  OR2 _141_ (
    .A(_058_),
    .B(_048_),
    .Y(_088_)
  );
  XOR2 _142_ (
    .A(_058_),
    .B(_048_),
    .Y(_089_)
  );
  XOR2 _143_ (
    .A(_086_),
    .B(_089_),
    .Y(_109_)
  );
  AND2 _144_ (
    .A(_059_),
    .B(_049_),
    .Y(_090_)
  );
  XOR2 _145_ (
    .A(_059_),
    .B(_049_),
    .Y(_091_)
  );
  AND2 _146_ (
    .A(_086_),
    .B(_088_),
    .Y(_092_)
  );
  OR2 _147_ (
    .A(_087_),
    .B(_092_),
    .Y(_093_)
  );
  AND2 _148_ (
    .A(_091_),
    .B(_093_),
    .Y(_094_)
  );
  XOR2 _149_ (
    .A(_091_),
    .B(_093_),
    .Y(_110_)
  );
  OR2 _150_ (
    .A(_090_),
    .B(_094_),
    .Y(_095_)
  );
  AND2 _151_ (
    .A(_060_),
    .B(_050_),
    .Y(_096_)
  );
  XOR2 _152_ (
    .A(_060_),
    .B(_050_),
    .Y(_097_)
  );
  AND2 _153_ (
    .A(_095_),
    .B(_097_),
    .Y(_098_)
  );
  XOR2 _154_ (
    .A(_095_),
    .B(_097_),
    .Y(_111_)
  );
  OR2 _155_ (
    .A(_096_),
    .B(_098_),
    .Y(_099_)
  );
  NOT1 _156_ (
    .A(_099_),
    .Y(_100_)
  );
  AND2 _157_ (
    .A(_061_),
    .B(_051_),
    .Y(_101_)
  );
  XOR2 _158_ (
    .A(_061_),
    .B(_051_),
    .Y(_102_)
  );
  AND2 _159_ (
    .A(_100_),
    .B(_102_),
    .Y(_103_)
  );
  XOR2 _160_ (
    .A(_099_),
    .B(_102_),
    .Y(_112_)
  );
  OR2 _161_ (
    .A(_101_),
    .B(_103_),
    .Y(_113_)
  );
  assign O = { sig_143, sig_142, sig_141, sig_140, sig_139, sig_138, sig_137, sig_136, sig_135, sig_134, 1'h0, B[5:4], A[5], B[2], A[5], sig_136 };
  assign _063_ = B[7];
  assign _053_ = A[7];
  assign _062_ = B[6];
  assign _052_ = A[6];
  assign sig_134 = _104_;
  assign _064_ = B[8];
  assign _054_ = A[8];
  assign sig_135 = _105_;
  assign _065_ = B[9];
  assign _055_ = A[9];
  assign sig_136 = _106_;
  assign _056_ = B[10];
  assign _046_ = A[10];
  assign sig_137 = _107_;
  assign _057_ = B[11];
  assign _047_ = A[11];
  assign sig_138 = _108_;
  assign _058_ = B[12];
  assign _048_ = A[12];
  assign sig_139 = _109_;
  assign _059_ = B[13];
  assign _049_ = A[13];
  assign sig_140 = _110_;
  assign _060_ = B[14];
  assign _050_ = A[14];
  assign sig_141 = _111_;
  assign _061_ = B[15];
  assign _051_ = A[15];
  assign sig_142 = _112_;
  assign sig_143 = _113_;
endmodule
